openapi: "3.0.3"
info:
  description: "API for money tree"
  version: "1.0.0"
  title: "Money Tree"
  # termsOfService: "http://swagger.io/terms/"
  contact:
    email: "test@test.com"
host: "localhost"
servers:
  - url: "http://localhost:9000"
tags:
  - name: "Expense"
    description: "Everything you've spent money on"
  - name: "Expense Category"
    description: "The category an expense falls under with a monthly target spending"
  - name: "Income"
    description: "Information on your source of money"
  - name: "Income Category"
    description: "The category this income falls under"
  - name: "Vendor"
    description: "Information about the vendor"

schemes:
  - "http"
paths:
  /expense:
    get:
      tags:
        - "Expense"
      summary: "Retrieve all expenses"
      description: "Retrieves all expenses. Pagination implemented soon™️"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/Expense"
    post:
      tags:
        - "Expense"
      summary: "Creates a new expense"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Expense that is added to the list of expenses"
          required: true
          schema:
            $ref: "#/definitions/Expense"
      responses:
        "201":
          description: "Resource successfully created."
          content:
            application/json:
              schema:
                $ref: "#/definitions/Expense"
        "400":
          description: "Bad request."

  /expense/{id}:
    get:
      tags:
        - "Expense"
      summary: "Retrieve expense by id"
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          description: "ID of expense to return"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/Expense"
        "404":
          description: "Expense not found."
    put:
      tags:
        - "Expense"
      summary: "Update expense by id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of expense that needs to be updated."
          required: true
          schema:
            type: "string"
            format: "uuid"
        - in: "body"
          name: "body"
          description: "Expense info to update to."
          required: true
          schema:
            $ref: "#/definitions/Expense"
      responses:
        "204":
          description: "Expense successfully updated."
        "400":
          description: "Bad request."
        "404":
          description: "Expense not found"
    delete:
      tags:
        - "Expense"
      summary: "Deletes an expense by id"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Expense id to delete"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Expense successfully deleted."
        "400":
          description: "Bad request."
        "404":
          description: "Expense not found."
  /expense/summary:
    get:
      tags:
        - "Expense"
      summary: "Retrieve expense summaries"
      description: "Retrieves list of expense summary."
      produces:
        - "application/json"
      parameters:
        - in: query
          name: "startDate"
          schema:
            type: "date"
        - in: query
          name: "endDate"
          schema:
            type: "date"
        - in: query
          name: "vendorIds"
          schema:
            type: "UUID list"
        - in: query
          name: "expenseCategoryIds"
          schema:
            type: "UUID list"
      responses:
        "200":
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/ExpenseSummary"

  /category/expense:
    get:
      tags:
        - "Expense Category"
      summary: "Retrieve all expense categories."
      description: ""
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/ExpenseCategory"
    post:
      tags:
        - "Expense Category"
      summary: "Creates a new expense category."
      description: "Expense category"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/ExpenseCategory"
      responses:
        "201":
          description: "Resource successfully created."
          content:
            application/json:
              schema:
                $ref: "#/definitions/ExpenseCategory"
        "400":
          description: "Bad request."

  /category/expense/{id}:
    get:
      tags:
        - "Expense Category"
      summary: "Retrieves expense category by name"
      description: "Returns a single expense cateory."
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of resource target to return"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/ExpenseCategory"
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
    put:
      tags:
        - "Expense Category"
      summary: "Updates expense category by name"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of resource that needs to be updated."
          required: true
          schema:
            type: "string"
            format: "uuid"
        - in: "body"
          name: "body"
          description: "Resource to be modified."
          required: true
          schema:
            $ref: "#/definitions/ExpenseCategory"
      responses:
        "204":
          description: "Resource successfully updated."
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
    delete:
      tags:
        - "Expense Category"
      summary: "Deletes expense category by name"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "category"
          in: "path"
          description: "Resource id to delete"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Resource successfully deleted."
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
        "409":
          description: "Resoruce conflict."

  /income:
    get:
      tags:
        - "Income"
      summary: "Retrieve all income information."
      description: ""
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/Income"
    post:
      tags:
        - "Income"
      summary: "Creates a new income data point."
      description: "Income information"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Income"
      responses:
        "201":
          description: "Resource successfully created."
          content:
            application/json:
              schema:
                $ref: "#/definitions/Income"
        "400":
          description: "Bad request."


  /income/{id}:
    get:
      tags:
        - "Income"
      summary: "Retrieves income data by id"
      description: "Returns a single income."
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of resource target to return"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/Income"
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
    put:
      tags:
        - "Income"
      summary: "Updates income data with id"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of resource that needs to be updated."
          required: true
          schema:
            type: "string"
            format: "uuid"
        - in: "body"
          name: "body"
          description: "Resource to be added."
          required: true
          schema:
            $ref: "#/definitions/Income"
      responses:
        "204":
          description: "Resource successfully updated."
        "400":
          description: "Bad request."
    delete:
      tags:
        - "Income"
      summary: "Deletes income data by id"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Resource id to delete"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Resource successfully deleted."
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
        "409":
          description: "Resource conflict."
  /income/summary:
    get:
      tags:
        - "Income"
      summary: "Retrieve a list of income summary"
      description: "Retrieve a list of income summary"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/IncomeSummary"

  /category/income:
    get:
      tags:
        - "Income Category"
      summary: "Retrieve all income categories."
      description: ""
      operationId: "getIncomeCategory"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/IncomeCategory"
    post:
      tags:
        - "Income Category"
      summary: "Creates a new income category."
      description: "Income category"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/IncomeCategory"
      responses:
        "201":
          description: "Resource successfully created."
          content:
            application/json:
              schema:
                $ref: "#/definitions/IncomeCategory"
        "400":
          description: "Bad request."


  /category/income/{id}:
    get:
      tags:
        - "Income Category"
      summary: "Retrieves income category by id"
      description: "Returns a single expense cateory."
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of resource target to return"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/IncomeCategory"
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
    put:
      tags:
        - "Income Category"
      summary: "Updates income category by id"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of resource that needs to be updated."
          required: true
          schema:
            type: "string"
            format: "uuid"
        - in: "body"
          name: "body"
          description: "Resource to be added."
          required: true
          schema:
            $ref: "#/definitions/IncomeCategory"
      responses:
        "204":
          description: "Resource successfully updated."
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
    delete:
      tags:
        - "Income Category"
      summary: "Deletes income category by id"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Resource id to delete"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Resource successfully deleted."
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
        "409":
          description: "Resource conflict"

  /vendor:
    get:
      tags:
        - "Vendor"
      summary: "Retrieve all vendor information."
      description: ""
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/Vendor"
    post:
      tags:
        - "Vendor"
      summary: "Creates a new vendor data point."
      description: "Vendor information"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Vendor"
      responses:
        "201":
          description: "Resource successfully created."
          content:
            application/json:
              schema:
                $ref: "#/definitions/Vendor"
        "400":
          description: "Bad request."

  /vendor/{id}:
    get:
      tags:
        - "Vendor"
      summary: "Retrieves vendor data by id"
      description: "Returns a single vendor."
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of resource target to return"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/definitions/Vendor"
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
    put:
      tags:
        - "Vendor"
      summary: "Updates vendor data by id"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of resource that needs to be updated."
          required: true
          schema:
            type: "string"
            format: "uuid"
        - in: "body"
          name: "body"
          description: "Resource to be added."
          required: true
          schema:
            $ref: "#/definitions/Vendor"
      responses:
        "204":
          description: "Resource successfully updated."
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
    delete:
      tags:
        - "Vendor"
      summary: "Deletes vendor data with id"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "vendor_id"
          in: "path"
          description: "Resource id to delete"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Resource successfully deleted."
        "400":
          description: "Bad request."
        "404":
          description: "Resource not found."
        "409":
          description: "Resource conflict."

definitions:
  Expense:
    properties:
      expense_id:
        type: "string"
        format: "uuid"
      transaction_date:
        type: "string"
        format: "date"
      transaction_amount:
        type: "number"
        format: "double"
      vendor_id:
        type: "string"
        format: "uuid"
      expense_category_id:
        type: "string"
        format: "uuid"
      notes:
        type: "string"
        example: "Notes about this expense"
      hide:
        type: "boolean"
        description: "Should this not be calculated into the budgets?"
  ExpenseSummary:
    properties:
      expense_id:
        type: "string"
        format: "uuid"
      transaction_date:
        type: "string"
        format: "date"
      transaction_amount:
        type: "number"
        format: "double"
      vendor:
        $ref: "#/definitions/Vendor"
      expense_category:
        $ref: "#/definitions/ExpenseCategory"
      notes:
        type: "string"
        example: "Notes about this expense"
      hide:
        type: "boolean"
        description: "Should this not be calculated into the budgets?"
  ExpenseCategory:
    properties:
      expense_category_id:
        type: "string"
        example: "uuid"
      expense_category_name:
        type: "string"
        example: "Restaurant"
      target_amount:
        type: "number"
        format: "double"
  ExpenseCategorySummary:
    properties:
      expense_category_id:
        type: "string"
        example: "uuid"
      expense_category_name:
        type: "string"
        example: "Restaurant"
      total_amount:
        type: "number"
        format: "double"
  Income:
    properties:
      income_id:
        type: "string"
        format: "uuid"
      source:
        type: "string"
        example: "Company Inc"
      income_category_id:
        type: "string"
        format: "uuid"
      transaction_amount:
        type: "number"
        format: "double"
      transaction_date:
        type: "string"
        format: "date"
      notes:
        type: "string"
        example: "what about this income"
      hide:
        type: "boolean"
  IncomeSummary:
    properties:
      income_id:
        type: "string"
        format: "uuid"
      source:
        type: "string"
        example: "Company Inc"
      income_category:
        $ref: "#/definitions/IncomeCategory"
      transaction_amount:
        type: "number"
        format: "double"
      transaction_date:
        type: "string"
        format: "date"
      notes:
        type: "string"
        example: "what about this income"
      hide:
        type: "boolean"
  IncomeCategory:
    properties:
      income_category_id:
        type: "string"
        example: "uuid"
      name:
        type: "string"
        example: "Job"
  IncomeCategorySummary:
    properties:
      income_category_id:
        type: "string"
        example: "uuid"
      income_category_name:
        type: "string"
        example: "Restaurant"
      target_amount:
        type: "number"
        format: "double"
  Vendor:
    properties:
      vendor_id:
        type: "string"
        format: "uuid"
      vendor_name:
        type: "string"
        example: "Vendor's name"
