/*
 * This file is generated by jOOQ.
 */
package moneytree.persist.db.generated.tables.daos;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;
import java.util.UUID;

import moneytree.persist.db.generated.tables.Income;
import moneytree.persist.db.generated.tables.records.IncomeRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IncomeDao extends DAOImpl<IncomeRecord, moneytree.persist.db.generated.tables.pojos.Income, UUID> {

    /**
     * Create a new IncomeDao without any configuration
     */
    public IncomeDao() {
        super(Income.INCOME, moneytree.persist.db.generated.tables.pojos.Income.class);
    }

    /**
     * Create a new IncomeDao with an attached configuration
     */
    public IncomeDao(Configuration configuration) {
        super(Income.INCOME, moneytree.persist.db.generated.tables.pojos.Income.class, configuration);
    }

    @Override
    public UUID getId(moneytree.persist.db.generated.tables.pojos.Income object) {
        return object.getIncomeId();
    }

    /**
     * Fetch records that have <code>income_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchRangeOfIncomeId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Income.INCOME.INCOME_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>income_id IN (values)</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchByIncomeId(UUID... values) {
        return fetch(Income.INCOME.INCOME_ID, values);
    }

    /**
     * Fetch a unique record that has <code>income_id = value</code>
     */
    public moneytree.persist.db.generated.tables.pojos.Income fetchOneByIncomeId(UUID value) {
        return fetchOne(Income.INCOME.INCOME_ID, value);
    }

    /**
     * Fetch records that have <code>source BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchRangeOfSource(String lowerInclusive, String upperInclusive) {
        return fetchRange(Income.INCOME.SOURCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source IN (values)</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchBySource(String... values) {
        return fetch(Income.INCOME.SOURCE, values);
    }

    /**
     * Fetch records that have <code>income_category_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchRangeOfIncomeCategoryId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Income.INCOME.INCOME_CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>income_category_id IN (values)</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchByIncomeCategoryId(UUID... values) {
        return fetch(Income.INCOME.INCOME_CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>transaction_amount BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchRangeOfTransactionAmount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Income.INCOME.TRANSACTION_AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_amount IN (values)</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchByTransactionAmount(BigDecimal... values) {
        return fetch(Income.INCOME.TRANSACTION_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>transaction_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchRangeOfTransactionDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Income.INCOME.TRANSACTION_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_date IN (values)</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchByTransactionDate(LocalDate... values) {
        return fetch(Income.INCOME.TRANSACTION_DATE, values);
    }

    /**
     * Fetch records that have <code>notes BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchRangeOfNotes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Income.INCOME.NOTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notes IN (values)</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchByNotes(String... values) {
        return fetch(Income.INCOME.NOTES, values);
    }

    /**
     * Fetch records that have <code>hide BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchRangeOfHide(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Income.INCOME.HIDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hide IN (values)</code>
     */
    public List<moneytree.persist.db.generated.tables.pojos.Income> fetchByHide(Boolean... values) {
        return fetch(Income.INCOME.HIDE, values);
    }
}
