/*
 * This file is generated by jOOQ.
 */
package moneytree.persist.generated.tables.records;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.UUID;

import moneytree.persist.generated.tables.Expense;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpenseRecord extends UpdatableRecordImpl<ExpenseRecord> implements Record7<UUID, LocalDate, BigDecimal, UUID, UUID, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mtdev.expense.id</code>.
     */
    public ExpenseRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>mtdev.expense.transaction_date</code>.
     */
    public ExpenseRecord setTransactionDate(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.transaction_date</code>.
     */
    public LocalDate getTransactionDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>mtdev.expense.transaction_amount</code>.
     */
    public ExpenseRecord setTransactionAmount(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.transaction_amount</code>.
     */
    public BigDecimal getTransactionAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>mtdev.expense.vendor</code>.
     */
    public ExpenseRecord setVendor(UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.vendor</code>.
     */
    public UUID getVendor() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>mtdev.expense.expense_category</code>.
     */
    public ExpenseRecord setExpenseCategory(UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.expense_category</code>.
     */
    public UUID getExpenseCategory() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>mtdev.expense.notes</code>.
     */
    public ExpenseRecord setNotes(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.notes</code>.
     */
    public String getNotes() {
        return (String) get(5);
    }

    /**
     * Setter for <code>mtdev.expense.hide</code>.
     */
    public ExpenseRecord setHide(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mtdev.expense.hide</code>.
     */
    public Boolean getHide() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, LocalDate, BigDecimal, UUID, UUID, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, LocalDate, BigDecimal, UUID, UUID, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Expense.EXPENSE.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Expense.EXPENSE.TRANSACTION_DATE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Expense.EXPENSE.TRANSACTION_AMOUNT;
    }

    @Override
    public Field<UUID> field4() {
        return Expense.EXPENSE.VENDOR;
    }

    @Override
    public Field<UUID> field5() {
        return Expense.EXPENSE.EXPENSE_CATEGORY;
    }

    @Override
    public Field<String> field6() {
        return Expense.EXPENSE.NOTES;
    }

    @Override
    public Field<Boolean> field7() {
        return Expense.EXPENSE.HIDE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getTransactionDate();
    }

    @Override
    public BigDecimal component3() {
        return getTransactionAmount();
    }

    @Override
    public UUID component4() {
        return getVendor();
    }

    @Override
    public UUID component5() {
        return getExpenseCategory();
    }

    @Override
    public String component6() {
        return getNotes();
    }

    @Override
    public Boolean component7() {
        return getHide();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getTransactionDate();
    }

    @Override
    public BigDecimal value3() {
        return getTransactionAmount();
    }

    @Override
    public UUID value4() {
        return getVendor();
    }

    @Override
    public UUID value5() {
        return getExpenseCategory();
    }

    @Override
    public String value6() {
        return getNotes();
    }

    @Override
    public Boolean value7() {
        return getHide();
    }

    @Override
    public ExpenseRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ExpenseRecord value2(LocalDate value) {
        setTransactionDate(value);
        return this;
    }

    @Override
    public ExpenseRecord value3(BigDecimal value) {
        setTransactionAmount(value);
        return this;
    }

    @Override
    public ExpenseRecord value4(UUID value) {
        setVendor(value);
        return this;
    }

    @Override
    public ExpenseRecord value5(UUID value) {
        setExpenseCategory(value);
        return this;
    }

    @Override
    public ExpenseRecord value6(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public ExpenseRecord value7(Boolean value) {
        setHide(value);
        return this;
    }

    @Override
    public ExpenseRecord values(UUID value1, LocalDate value2, BigDecimal value3, UUID value4, UUID value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExpenseRecord
     */
    public ExpenseRecord() {
        super(Expense.EXPENSE);
    }

    /**
     * Create a detached, initialised ExpenseRecord
     */
    public ExpenseRecord(UUID id, LocalDate transactionDate, BigDecimal transactionAmount, UUID vendor, UUID expenseCategory, String notes, Boolean hide) {
        super(Expense.EXPENSE);

        setId(id);
        setTransactionDate(transactionDate);
        setTransactionAmount(transactionAmount);
        setVendor(vendor);
        setExpenseCategory(expenseCategory);
        setNotes(notes);
        setHide(hide);
    }
}
